<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Observers\VulnerabilityObserver;

/**
 * Vulnerability Model.
 *
 * Represents a Vulnerability that affects a product.
 * Contains useful information, such as description, proof of concept...
 */
class Vulnerability extends Model
{
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'severity_id', 'type_id', 'title', 'date',
        'description', 'proof_of_concept', 'vulnerable_code'
    ];

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = ['created_at', 'updated_at', 'date'];

    /**
     * Boot events.
     */
    protected static function boot()
    {
        parent::boot();

        static::observe(VulnerabilityObserver::class);
    }

    /**
     * Vulnerability Type relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function type()
    {
        return $this->belongsTo('App\Models\VulnerabilityType');
    }

    /**
     * Severity relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function severity()
    {
        return $this->belongsTo('App\Models\Severity');
    }

    /**
     * Details relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function details()
    {
        return $this->hasMany('App\Models\VulnerabilityDetail');
    }

    /**
     * Products relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasManyThrough
     */
    public function products()
    {
        return $this->belongsToMany('App\Models\Product')->using('App\Models\Pivots\ProductVulnerability');
    }

    /**
     * Affectances relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function affectances()
    {
        return $this->hasMany('App\Models\VulnerabilityAffectance');
    }

    /**
     * Findings relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function findings()
    {
        return $this->hasMany('App\Models\Finding');
    }
}
