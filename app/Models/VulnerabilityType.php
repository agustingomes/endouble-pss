<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;

/**
 * Vulnerability Type Model.
 *
 * Defines a type of vulnerability.
 */
class VulnerabilityType extends Model
{
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = ['code', 'name'];

    /**
     * Filters unknwon vulnerability type.
     *
     * @param \Illuminate\Database\Eloquent\Builder $query
     *
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeUnknown(Builder $query)
    {
        return $query->where('code', 'UNKNOWN');
    }

    /**
     * Scope the vulnerability type by it's code.
     *
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param string                                $code
     *
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeWithCode($query, $code)
    {
        return $query->where('code', $code);
    }

    /**
     * Vulnerabilities relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function vulnerabilities()
    {
        return $this->hasMany('App\Models\Vulnerability', 'type_id');
    }

    /**
     * Findings relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function findings()
    {
        return $this->hasMany('App\Models\Finding');
    }

    /**
     * Severity relation.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function severity()
    {
        return $this->belongsTo('App\Models\Severity');
    }
}
